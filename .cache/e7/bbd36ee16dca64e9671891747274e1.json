{"id":"node_modules/three-nebula/build/esm/renderer/GPURenderer/Desktop/shaders/vertexShader.js","dependencies":[{"name":"/home/kaba92/code/Gobelins/soundVisualisation/package.json","includedInParent":true,"mtime":1669841357456},{"name":"/home/kaba92/code/Gobelins/soundVisualisation/node_modules/three-nebula/package.json","includedInParent":true,"mtime":1669831814496},{"name":"../../common/TextureAtlas/constants","loc":{"line":1,"column":34,"index":34},"parent":"/home/kaba92/code/Gobelins/soundVisualisation/node_modules/three-nebula/build/esm/renderer/GPURenderer/Desktop/shaders/vertexShader.js","resolved":"/home/kaba92/code/Gobelins/soundVisualisation/node_modules/three-nebula/build/esm/renderer/GPURenderer/common/TextureAtlas/constants.js"},{"name":"../../common/shaders/constants","loc":{"line":2,"column":40,"index":113},"parent":"/home/kaba92/code/Gobelins/soundVisualisation/node_modules/three-nebula/build/esm/renderer/GPURenderer/Desktop/shaders/vertexShader.js","resolved":"/home/kaba92/code/Gobelins/soundVisualisation/node_modules/three-nebula/build/esm/renderer/GPURenderer/common/shaders/constants.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vertexShader = void 0;\nvar _constants = require(\"../../common/TextureAtlas/constants\");\nvar _constants2 = require(\"../../common/shaders/constants\");\nconst vertexShader = () => {\n  return `\n    uniform sampler2D uTexture;\n    //atlasIndex is a 256x1 float texture of tile rectangles as r=minx g=miny b=maxx a=maxy\n    uniform sampler2D atlasIndex;\n\n    attribute float size;\n    attribute vec3 color;\n    attribute float alpha;\n    attribute float texID;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n    varying float tileID;\n\n    void main() {\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      targetColor = color;\n      targetAlpha = alpha;\n\n      tileID = texID;\n      //get the tile rectangle from the atlasIndex texture..\n      tileRect = texture2D(atlasIndex, vec2((tileID + 0.5) / ${_constants.DATA_TEXTURE_SIZE}.0, 0.5));\n\n      gl_PointSize = ((size * ${_constants2.SIZE_ATTENUATION_FACTOR}) / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n`;\n};\nexports.vertexShader = vertexShader;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":4,"column":7},"generated":{"line":9,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":"vertexShader","original":{"line":4,"column":13},"generated":{"line":9,"column":6}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":4,"column":25},"generated":{"line":9,"column":18}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":4,"column":28},"generated":{"line":9,"column":21}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":4,"column":34},"generated":{"line":9,"column":27}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":5,"column":2},"generated":{"line":10,"column":2}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":5,"column":10},"generated":{"line":10,"column":9}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":6,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":7,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":8,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":9,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":10,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":11,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":12,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":13,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":14,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":15,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":16,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":17,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":18,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":19,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":20,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":21,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":22,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":23,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":24,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":25,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":26,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":27,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":"DATA_TEXTURE_SIZE","original":{"line":27,"column":63},"generated":{"line":32,"column":63}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":27,"column":81},"generated":{"line":32,"column":91}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":28,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":29,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":"SIZE_ATTENUATION_FACTOR","original":{"line":29,"column":32},"generated":{"line":34,"column":32}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":29,"column":56},"generated":{"line":34,"column":67}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":30,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":31,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":32,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":5,"column":2},"generated":{"line":37,"column":1}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":33,"column":1},"generated":{"line":38,"column":0}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":4,"column":7},"generated":{"line":38,"column":1}},{"source":"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","name":null,"original":{"line":4,"column":7},"generated":{"line":39,"column":0}}],"sources":{"../../../../../../src/renderer/GPURenderer/Desktop/shaders/vertexShader.js":"import { DATA_TEXTURE_SIZE } from '../../common/TextureAtlas/constants';\nimport { SIZE_ATTENUATION_FACTOR } from '../../common/shaders/constants';\n\nexport const vertexShader = () => {\n  return `\n    uniform sampler2D uTexture;\n    //atlasIndex is a 256x1 float texture of tile rectangles as r=minx g=miny b=maxx a=maxy\n    uniform sampler2D atlasIndex;\n\n    attribute float size;\n    attribute vec3 color;\n    attribute float alpha;\n    attribute float texID;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n    varying float tileID;\n\n    void main() {\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      targetColor = color;\n      targetAlpha = alpha;\n\n      tileID = texID;\n      //get the tile rectangle from the atlasIndex texture..\n      tileRect = texture2D(atlasIndex, vec2((tileID + 0.5) / ${DATA_TEXTURE_SIZE}.0, 0.5));\n\n      gl_PointSize = ((size * ${SIZE_ATTENUATION_FACTOR}) / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n`;\n};\n"},"lineCount":null}},"error":null,"hash":"4f9b0f721f1e124ef90ea99a3e9e68a5","cacheData":{"env":{}}}